// $Id: dspout.cpp,v 1.19 1998/12/05 20:56:11 andude Exp $
// $Log: dspout.cpp,v $
// Revision 1.19  1998/12/05 20:56:11  andude
// Beginning of gtk+ conversion.  A knob widget and a set of seven knobs which
// control a 303 synthesizer have been added.  An additional Sun audio
// buffering hack (from Mattias Engdegård) is also in here.
//
// Revision 1.18  1998/11/29 00:41:34  andude
// Removed background texture and adjusted led.xpm to match.  Applied the Sun
// audio patch by Mattias Engdegård.  Upped version number to 0.1.2.  Renamed
// WINCORE.CPP to wincore.cpp, since Windows' case-hiding is so cool.
//
// Revision 1.17  1998/11/12 23:50:44  andude
// Some fixes to voxware/OSS driver buffer sizing.
//
// Resonance tuning in vcf303.
//
// Sequencer doesn't change patterns while playing until the end of the
// current one.
//
// Revision 1.16  1998/11/10 17:41:31  andude
// Whoops!  It's twice as fast now since the stereo bit is set correctly.
//
// Revision 1.15  1998/11/10 07:26:36  raybondo
// Added windows port and made a  wdspout for windows specifics because it is fundamentally different than the un*x dspout stuff.
//
// Revision 1.14  1998/11/09 20:27:12  andude
// Added buffersize commandline option.
//
// Revision 1.13  1998/11/08 21:46:21  andude
// Added "fun with filters" program.
//
// Revision 1.12  1998/11/08 11:50:32  andude
// The sawtooth is still very wrong, I just discovered.  It looks like a
// lowpass-filtered sawtooth is what's supposed to happen but my filter isn't
// producing "authentic" results.  Either the resonant frequency isn't at the
// cutoff on ReBirth, or there's a second filter.
//
// Also, distortion is now harmonic instead of just overdriven.  I could add a
// "shape" knob, pretty simply.
//
// Revision 1.11  1998/11/08 07:27:55  andude
// Added delay-reverb and distortion.  Very, very cool sound.  Some tuning on
// resonance still needs doing, and perhaps distortion could use some fine
// tuning as well.  Stereo effects aren't implemented yet but wouldn't be
// difficult to add.
//
// Revision 1.10  1998/11/08 03:40:22  andude
// Finished internal changes.  ubersyn.cpp is deprecated.
//
// Revision 1.9  1998/11/07 22:43:13  andude
// Massive overhaul in internal design.  Components are now modular and each
// module acts on a whole buffer at a time.  Overhaul is still in progress;
// Next on the list is the 303 filter, the sequencer, and the amplifier.  Then
// delay (quasi-reverb) and distortion will be added.
//
// Revision 1.8  1998/11/06 05:34:13  andude
// The pure virtualness of SoundEvent was removed because pthreads fucked it
// up somehow.
//
// Revision 1.7  1998/11/06 05:11:16  andude
// Whoops.  the usefile #define slipped by.
//
// Revision 1.6  1998/11/06 02:21:02  andude
// Wow.  Huge improvement in the sound quality and authenticity.
// Slight change to VCF.  Resonance is in more or less the correct range
// although when it's all the way up, the sound is slightly too "hollow".
//
// Sawtooth.h is no more; the sound coming from Rebirth RB-338 is not
// generated from a sawtooth.  Rather, it would seem that the sound is
// generated by continuous time buzz in the desired frequency, then fed
// through some filter with an overdamped impulse response.  I sampled this
// response in 303saw.raw and the VCO stage just outputs that sample which
// retriggers at the desired frequency.
//
// Revision 1.5  1998/11/04 04:58:38  andude
// Added pattern saving (save button) and transparent loading on startup.
//
// Calculated correlation between cutoff, env.mod, and actual cutoff envelope;
// implemented into ubersyn.cpp.  Temporary change to dspout.cpp to prefer my
// gf1 device over /dev/dsp.
//
// The double two-pole state-variable filter can't handle the high cutoff
// frequencies needed when env.mod and cutoff are set moderately high.  A
// temporary hack is included to keep the filter stable until a better filter
// is found.
//
// Revision 1.4  1998/11/03 23:57:29  andude
// Added file output #ifdef to dspout.
//
// Numerous improvements to the synthesis engine.  Sounds very much more
// 303-like, but the env.mod dial needs tuning (you can make the filter
// unstable with it as it stands).
//
// Ray's new LED is in here, too.
//
// Revision 1.3  1998/11/02 23:48:21  andude
// Added SGI audio.
//
// Revision 1.2  1998/11/02 16:51:49  andude
// Added ID and Log tags.
//

#include "dspout.h"
#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>





static int die=0;





void DSPOut::Process(const float *buf, int len, int channels)
{
	int i;
	len*=channels;
	if(len>bufsize) {
		printf("len>bufsize!*(\n");
		len=bufsize;
	}
	
	if(!buf) memset(outbuf, 0, len*2);
	else for(i=0;i<len;i++) {
		float k = buf[i];
		if(k>32767.0) k=32767;
		if(k<-32767.0) k=-32767;
		outbuf[i] = (short)k;
	}
}


DSPOut::DSPOut(int hz, int st, int buf)
{

	
	bufsize=0;
	outbuf=NULL;
	bufsize=buf;
	outbuf=(short*)malloc(bufsize*sizeof(short));
}

void DSPOut::BeginPlayback()
{
	// Create our thread
	//pthread_create(&dspth, NULL, dspthread, (void*)this);
}

void DSPOut::StopPlayback()
{


	die=1;
	//pthread_join(dspth, &duh);

}

DSPOut::~DSPOut()
{
	free(outbuf);
}

short*
DSPOut::getBuffer()
{
	return outbuf;	
}

void DSPOut::SoundEvent(int)
{
	printf("blah\n");
}
void DSPOut::Reset()
{
	memset(outbuf,0,bufsize*sizeof(short));
}
